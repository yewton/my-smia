version: '3'

vars:
  ENV: '{{default "local" .ENV}}'
  ROOT:
    sh: 'realpath .'
  SECRET_FILE: '{{.ROOT}}/config/{{.ENV}}/bootstrap.yml'
  CONFIG_REPO: '{{.ROOT}}/config-repo/{{.ENV}}'

dotenv: [ '.env.{{.ENV}}' ]

includes:
  k8s:
    taskfile: ./k8s
    dir: ./k8s
  docker:
    taskfile: ./docker
    dir: ./docker
  apps:
    taskfile: ./apps
    dir: ./apps

tasks:
  generate:config-files:
    desc: 各種設定ファイルを生成します
    vars:
      ENCRYPTED_DB_PASSWORD:
        sh: spring encrypt '{{.DB_PASSWORD}}' --key '{{.ENCRYPT_KEY}}'
      ENCRYPTED_JWT_SIGNING_KEY:
        sh: spring encrypt '{{.JWT_SIGNING_KEY}}' --key '{{.ENCRYPT_KEY}}'
    cmds:
      - 'mkdir -p $(dirname {{.SECRET_FILE}})'
      - 'echo "encrypt.key: \"{{.ENCRYPT_KEY}}\"" > {{.SECRET_FILE}}'
      - 'mkdir -p {{.CONFIG_REPO}}'
      - 'echo "signing.key: \"{cipher}{{.ENCRYPTED_JWT_SIGNING_KEY}}\"" > {{.CONFIG_REPO}}/application.yml'
      - 'echo "spring.datasource.password: \"{cipher}{{.ENCRYPTED_DB_PASSWORD}}\"" > {{.CONFIG_REPO}}/application-database.yml'
    silent: true # 暗号化鍵を画面出力したくないので
  db:seed:
    desc: 初期データを投入します
    env:
      PGPASSFILE: '{{.ROOT}}/.pgpass'
    cmds:
      - psql -f ./docker/init.sql -f ./docker/data.sql
